service: ${self:custom.global.product}-${self:custom.component}

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-domain-manager

package:
  exclude:
    - "**/*.ts"

custom:
  component: api
  global: ${file(../serverless-global.yml)}

  specifiedStage: ${env:AWS_STAGE, opt:stage}
  stage: ${self:custom.specifiedStage, 'test'}

  subdomains:
    prod: "${self:custom.component}."
    test: ${self:custom.component}-${self:custom.global.environments.test}.
    ian: ${self:custom.component}-${self:custom.global.environments.ian}.
    andrew: ${self:custom.component}-${self:custom.global.environments.andrew}.

  subdomain: ${self:custom.subdomains.${self:custom.stage}}

  hostname: ${self:custom.subdomain}${self:custom.global.domain}

  customDomain:
    domainName: ${self:custom.hostname}
    certificateName: '*.${self:custom.global.domain}'
    basePath: ''
    stage: ${self:custom.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: ${self:custom.stage}

functions:
  http:
    handler: src/lambda.http
    events:
      - http: ANY /
      - http: ANY /{proxy+}