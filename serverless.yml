service: boombox

plugins:
  - serverless-python-requirements

custom:
  stage: ${opt:stage, 'dev'}
  accountId: "095713129403"
  pythonRequirements:
    noDeploy: ""
  AWSTranscriptions: ${self:service}-${self:custom.stage}-aws-transcriptions
  normalizedAWSTranscriptions: ${self:service}-${self:custom.stage}-normalized-aws-transcriptions
  zippedAWSTranscriptions: ${self:service}-${self:custom.stage}-zipped-aws-transcriptions
  watsonTranscriptions: ${self:service}-${self:custom.stage}-watson-transcriptions
  normalizedWatsonTranscriptions: ${self:service}-${self:custom.stage}-normalized-watson-transcriptions
  zippedWatsonTranscriptions: ${self:service}-${self:custom.stage}-zipped-watson-transcriptions
  combinedTranscriptions: ${self:service}-${self:custom.stage}-combined-transcriptions
  activeJobsTable: ${self:service}-${self:custom.stage}-podcast-jobs
  podcastsTable: ${self:service}-${self:custom.stage}-podcasts
  episodesTable: ${self:service}-${self:custom.stage}-episodes
  episodeInsertLimit: "2"
  podcastInput: ${self:service}-${self:custom.stage}-podcast-input
  podcastSplits: ${self:service}-${self:custom.stage}-podcast-splits
  transcodeQueue: ${self:service}-${self:custom.stage}-transcode-queue
  transcodePipeline: ${self:service}-${self:custom.stage}-transcode-pipeline
  transcodePipelineIds:
    dev: 1531438545970-0z6rkw
  transcodePipelineId: ${self:custom.transcodePipelineIds.${self:custom.stage}}
  transcodePipelineARN: arn:aws:elastictranscoder:${self:provider.region}:${self:custom.accountId}:pipeline/${self:custom.transcodePipelineId}
  transcodeJobsARN: arn:aws:elastictranscoder:${self:provider.region}:${self:custom.accountId}:job/*
  transcodePresetsARN: arn:aws:elastictranscoder:${self:provider.region}:${self:custom.accountId}:preset/*
  transcodePendingSNS: ${self:service}-${self:custom.stage}-transcode-pending
  transcodePendingSNSARN: arn:aws:sns:${self:provider.region}:${self:custom.accountId}:${self:custom.transcodePendingSNS}
  transcodeCompleteSNS: ${self:service}-${self:custom.stage}-transcode-complete
  permissionsCompleteSNS: ${self:service}-${self:custom.stage}-permissions-complete
  permissionsCompleteSNSARN: arn:aws:sns:${self:provider.region}:${self:custom.accountId}:${self:custom.permissionsCompleteSNS}
  splitPipeline: ${self:service}-${self:custom.stage}-split-pipeline
  splitCompleteSNS: ${self:service}-${self:custom.stage}-split-complete
  splitPipelineIds:
    dev: 1531803024408-reo2a2
  splitPipelineId: ${self:custom.splitPipelineIds.${self:custom.stage}}
  splitPipelineARN: arn:aws:elastictranscoder:${self:provider.region}:${self:custom.accountId}:pipeline/${self:custom.splitPipelineId}
  normalizeAWSCompleteSNS: ${self:service}-${self:custom.stage}-normalize-aws-complete
  normalizeAWSCompleteSNSARN: arn:aws:sns:${self:provider.region}:${self:custom.accountId}:${self:custom.normalizeAWSCompleteSNS}

package:
  exclude:
    - node_modules/**
    - .requirements/**
    - .idea/**
    - env/**
    - package.json
    - package-lock.json
    - requirements.txt
    - LICENSE
    - .gitignore

provider:
  name: aws
  runtime: python2.7
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: 
        - arn:aws:s3:::${self:custom.AWSTranscriptions}/*
        - arn:aws:s3:::${self:custom.normalizedAWSTranscriptions}/*
        - arn:aws:s3:::${self:custom.watsonTranscriptions}/*
        - arn:aws:s3:::${self:custom.normalizedWatsonTranscriptions}/*
        - arn:aws:s3:::${self:custom.combinedTranscriptions}/*
        - arn:aws:s3:::${self:custom.podcastInput}/*
    - Effect: Allow
      Action:
        - s3:PutObjectAcl
      Resource: 
        - arn:aws:s3:::${self:custom.podcastInput}/*
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource: 
        - arn:aws:s3:::${self:custom.AWSTranscriptions}/*
        - arn:aws:s3:::${self:custom.normalizedAWSTranscriptions}/*
        - arn:aws:s3:::${self:custom.watsonTranscriptions}/*
        - arn:aws:s3:::${self:custom.normalizedWatsonTranscriptions}/*
        - arn:aws:s3:::${self:custom.combinedTranscriptions}/*
        - arn:aws:s3:::${self:custom.podcastInput}/*
        - arn:aws:s3:::${self:custom.podcastSplits}/*
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchGetItem
        - dynamodb:BatchWriteItem
        - dynamodb:DescribeTable
      Resource: 
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.activeJobsTable}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.podcastsTable}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.episodesTable}
    - Effect: Allow
      Action:
        - sqs:ReceiveMessage
      Resource: 
        Fn::GetAtt:
          - transcodeQueue
          - Arn
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource: 
        - ${self:custom.transcodePendingSNSARN}
        - ${self:custom.permissionsCompleteSNSARN}
        - ${self:custom.normalizeAWSCompleteSNSARN}
    - Effect: Allow
      Action:
        - elastictranscoder:Read*
        - elastictranscoder:List*
        - elastictranscoder:*Job
      Resource: 
        - ${self:custom.transcodePipelineARN}
        - ${self:custom.transcodeJobsARN}
        - ${self:custom.transcodePresetsARN}
        - ${self:custom.splitPipelineARN}
    - Effect: Allow
      Action:
        - transcribe:StartTranscriptionJob
      Resource: "*"
  environment:
      PODCASTS_TABLE: ${self:custom.podcastsTable}
      EPISODES_TABLE: ${self:custom.episodesTable}
      INSERT_LIMIT: ${self:custom.episodeInsertLimit}

functions:
  podcasts-update-from-feed:
    name: ${self:service}-${self:custom.stage}-podcasts-update-from-feed
    handler: podcasts.checkRSSFeed
    timeout: 300
  podcasts-download:
    name: ${self:service}-${self:custom.stage}-podcasts-download
    handler: podcasts.download
    timeout: 300
    environment:
      OUTPUT_BUCKET: ${self:custom.podcastInput}
      TRANSCODE_PENDING_ARN: ${self:custom.transcodePendingSNSARN}
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - episodesTable
              - StreamArn
  podcasts-transcode:
    name: ${self:service}-${self:custom.stage}-podcasts-transcode
    handler: podcasts.transcode
    timeout: 60
    environment:
      TRANSCODE_PIPELINE_ID: ${self:custom.transcodePipelineId}
    events:
      - sns: ${self:custom.transcodePendingSNS}
  podcasts-file-permissions:
    name: ${self:service}-${self:custom.stage}-podcasts-file-permissions
    handler: podcasts.filePermissions
    timeout: 60
    environment:
      INPUT_BUCKET: ${self:custom.podcastInput}
      PERMISSIONS_COMPLETE_ARN: ${self:custom.permissionsCompleteSNSARN}
    events:
      - sns: ${self:custom.transcodeCompleteSNS}
  podcasts-split:
    name: ${self:service}-${self:custom.stage}-podcasts-split
    handler: podcasts.split
    timeout: 60
    environment:
      SPLIT_PIPELINE_ID: ${self:custom.splitPipelineId}
    events:
      - sns: ${self:custom.permissionsCompleteSNS}
  aws-transcribe:
    name: ${self:service}-${self:custom.stage}-aws-transcribe
    handler: aws.transcribe
    timeout: 60
    environment:
      INPUT_BUCKET: ${self:custom.podcastSplits}
      OUTPUT_BUCKET: ${self:custom.AWSTranscriptions}
      REGION: ${self:provider.region}
    events:
      - sns: ${self:custom.splitCompleteSNS}
  aws-normalize:
    name: ${self:service}-${self:custom.stage}-aws-normalize
    handler: aws.normalize
    timeout: 60
    environment:
      OUTPUT_BUCKET: ${self:custom.normalizedAWSTranscriptions}
      NORMALIZE_AWS_COMPLETE_ARN: ${self:custom.normalizeAWSCompleteSNSARN}
    events:
      - s3:
          bucket: ${self:custom.AWSTranscriptions}
          event: s3:ObjectCreated:*
  aws-zip:
    name: ${self:service}-${self:custom.stage}-normalized-zip
    handler: normalized.zip
    timeout: 300
    environment:
      INPUT_BUCKET: ${self:custom.normalizedAWSTranscriptions}
      OUTPUT_BUCKET: ${self:custom.zippedAWSTranscriptions}
    events:
      - sns: ${self:custom.normalizeAWSCompleteSNS}
  watson-normalize:
    name: ${self:service}-${self:custom.stage}-watson-normalize
    handler: watson.normalize
    timeout: 60
    environment:
      OUTPUT_BUCKET: ${self:custom.normalizedWatsonTranscriptions}
    events:
      - s3:
          bucket: ${self:custom.watsonTranscriptions}
          event: s3:ObjectCreated:*
  
  normalized-combine:
    name: ${self:service}-${self:custom.stage}-normalized-combine
    handler: normalized.combine
    timeout: 300
    environment:
      AWS_INPUT_BUCKET: ${self:custom.normalizedAWSTranscriptions}
      WATSON_INPUT_BUCKET: ${self:custom.normalizedWatsonTranscriptions}
      OUTPUT_BUCKET: ${self:custom.combinedTranscriptions}
    # events:
    #   - s3:
    #       bucket: ${self:custom.normalizedAWSTranscriptions}
    #       event: s3:ObjectCreated:*
    #   - s3:
    #       bucket: ${self:custom.normalizedWatsonTranscriptions}
    #       event: s3:ObjectCreated:*

resources:
  Resources:
    combinedtranscriptions:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.combinedTranscriptions}
    normalizedAWStranscriptions:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.normalizedAWSTranscriptions}
    zippedAWStranscriptions:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.zippedAWSTranscriptions}
    podcastInput:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.podcastInput}
    podcastSplits:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.podcastSplits}
    transcodeQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.transcodeQueue}
        VisibilityTimeout: 300
    activeJobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.activeJobsTable}
        AttributeDefinitions:
          -
            AttributeName: jobId
            AttributeType: S
          -
            AttributeName: startDate
            AttributeType: S
        KeySchema:
          -
            AttributeName: jobId
            KeyType: HASH
          - AttributeName: startDate
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    podcastsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.podcastsTable}
        AttributeDefinitions:
          -
            AttributeName: feedURL
            AttributeType: S
        KeySchema:
          -
            AttributeName: feedURL
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    episodesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.episodesTable}
        AttributeDefinitions:
          -
            AttributeName: guid
            AttributeType: S
        KeySchema:
          -
            AttributeName: guid
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: NEW_IMAGE